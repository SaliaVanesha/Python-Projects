import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import io
from PIL import Image
import networkx as nx

# Data (from the table provided)
data = {
    'Task': [
        'Retrieve wheel components', 'Setup workspace and tools', 'Inspect components for defects',
        'Assemble hub to wheel frame', 'Secure hub with bolts', 'Lubricate wheel bearings',
        'Install bearings into hub', 'Attach wheel sensors', 'Test sensor functionality',
        'Fit brake discs to hub', 'Install brake calipers', 'Connect brake lines',
        'Bleed brake system', 'Mount wheel to axle', 'Secure wheel with locking mechanism',
        'Conduct wheel alignment', 'Perform functional test', 'Clean assembly area',
        'Document assembly process', 'Transport assembly'
    ],
    'Average (mm:ss)': ['2:26:30', '1:38:30', '3:02:30', '4:16:48', '2:50:00', '1:31:21', '3:06:18',
                       '2:37:30', '2:55:30', '4:02:42', '3:47:30', '3:33:15', '3:59:48',
                       '5:24:30', '2:16:15', '4:46:18', '3:12:18', '1:54:42', '2:05:00', '2:37:12'],
    'Std Dev (mm:ss)': ['0:06.12', '0:05.99', '0:05.97', '0:08.53', '0:08.50', '0:09.91', '0:06.66',
                        '0:06.62', '0:07.74', '0:07.72', '0:08.52', '0:08.43', '0:08.23',
                        '0:07.72', '0:09.13', '0:08.70', '0:08.82', '0:07.96', '0:07.72', '0:09.13'],
    'Percent of Total Time': [3.71, 2.50, 4.74, 6.68, 4.41, 2.38, 4.83, 4.13, 4.56, 6.32, 5.92, 5.53, 6.27, 8.39, 3.53, 7.45, 5.02, 2.98, 3.23, 4.10]
}

df = pd.DataFrame(data)

# Convert mm:ss strings to minutes
def time_to_minutes(time_str):
    minutes, seconds = map(int, time_str.split(':'))
    return minutes + seconds / 60

df['Average (minutes)'] = df['Average (mm:ss)'].apply(time_to_minutes)
df['Std Dev (minutes)'] = df['Std Dev (mm:ss)'].apply(time_to_minutes)

# 1. Bar Chart of Average Task Times
plt.figure(figsize=(15, 6))
plt.bar(df['Task'], df['Average (minutes)'])
plt.xlabel('Task Description')
plt.ylabel('Average Time (minutes)')
plt.title('Average Time per Task')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

# 2. Bar Chart of Standard Deviations
plt.figure(figsize=(15, 6))
plt.bar(df['Task'], df['Std Dev (minutes)'])
plt.xlabel('Task Description')
plt.ylabel('Standard Deviation (minutes)')
plt.title('Standard Deviation of Task Times')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

# 3. Pie Chart of Percentage of Total Time
plt.figure(figsize=(8, 8))
plt.pie(df['Percent of Total Time'], labels=df['Task'], autopct='%1.1f%%', startangle=140)
plt.title('Percentage of Total Time per Task')
plt.axis('equal')
plt.tight_layout()
plt.show()

# 4. Process Flow Diagram using networkx
G = nx.DiGraph()
tasks = df['Task'].tolist()
for i in range(len(tasks) - 1):
    G.add_edge(tasks[i], tasks[i+1])

pos = nx.spring_layout(G)
nx.draw(G, pos, with_labels=True, node_size=1500, node_color='skyblue', font_size=8, arrowsize=20)
plt.title('Process Flow Diagram')
plt.show()
